#include <iostream>
using namespace std;

class CircularQueue {
    int arr[5];       // fixed size 5 for simplicity
    int front, rear, size, capacity;
public:
    CircularQueue() {
        capacity = 5;
        front = 0;
        rear = -1;
        size = 0;
    }

    void enqueue(int x) {
        if (size == capacity) {
            cout << "Queue is full\n";
            return;
        }
        rear = (rear + 1) % capacity;
        arr[rear] = x;
        size++;
    }

    void dequeue() {
        if (size == 0) {
            cout << "Queue is empty\n";
            return;
        }
        cout << "Removed: " << arr[front] << "\n";
        front = (front + 1) % capacity;
        size--;
    }

    void display() {
        if (size == 0) {
            cout << "Queue is empty\n";
            return;
        }
        cout << "Queue: ";
        for (int i = 0; i < size; i++) {
            cout << arr[(front + i) % capacity] << " ";
        }
        cout << "\n";
    }
};

int main() {
    CircularQueue q;   // <-- matches the class name above
    q.enqueue(10);
    q.enqueue(20);
    q.enqueue(30);
    q.display();    // Queue: 10 20 30
    q.dequeue();    // Removed: 10
    q.display();    // Queue: 20 30
    q.enqueue(40);
    q.enqueue(50);
    q.enqueue(60);
    q.display();    // Queue: 20 30 40 50 60
    return 0;
}
